type CreateMetadataAccount @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    data: String,
	is_mutable: Boolean,
	account_name: String
}
type UpdateMetadataAccount @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    primary_sale_happened: Boolean,
	account_name: String
}
type DeprecatedCreateMasterEdition @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    max_supply: BigInt,
	account_name: String
}
type DeprecatedMintNewEditionFromMasterEditionViaPrintingToken @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    account_name: String
}
type UpdatePrimarySaleHappenedViaToken @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    account_name: String
}
type DeprecatedSetReservationList @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    total_reservation_spots: BigInt,
	offset: BigInt,
	total_spot_offset: BigInt,
	account_name: String
}
type DeprecatedCreateReservationList @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    account_name: String
}
type SignMetadata @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    account_name: String
}
type DeprecatedMintPrintingTokensViaToken @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    supply: BigInt,
	account_name: String
}
type DeprecatedMintPrintingTokens @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    supply: BigInt,
	account_name: String
}
type CreateMasterEdition @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    max_supply: BigInt,
	account_name: String
}
type MintNewEditionFromMasterEditionViaToken @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    edition: BigInt,
	account_name: String
}
type ConvertMasterEditionV1ToV2 @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    account_name: String
}
type MintNewEditionFromMasterEditionViaVaultProxy @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    edition: BigInt,
	account_name: String
}
type PuffMetadata @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    account_name: String
}
type UpdateMetadataAccountV2 @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    primary_sale_happened: Boolean,
	is_mutable: Boolean,
	account_name: String
}
type CreateMetadataAccountV2 @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    data: String,
	is_mutable: Boolean,
	account_name: String
}
type CreateMasterEditionV3 @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    max_supply: BigInt,
	account_name: String
}
type VerifyCollection @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    account_name: String
}
type Utilize @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    number_of_uses: BigInt,
	account_name: String
}
type ApproveUseAuthority @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    number_of_uses: BigInt,
	account_name: String
}
type RevokeUseAuthority @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    account_name: String
}
type UnverifyCollection @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    account_name: String
}
type ApproveCollectionAuthority @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    
}
type RevokeCollectionAuthority @entity {
    id: ID!,
    block_timestamp: BigInt!,
    tx_hash: String,
    
}